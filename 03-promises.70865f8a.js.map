{"mappings":"qhBASA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAkBpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA1BbL,EAAKa,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMV,EAAQW,SAAShB,EAAKiB,SAAgB,MAAEC,OACxCC,EAAOH,SAAShB,EAAKiB,SAAe,KAAEC,OACtCE,EAASJ,SAAShB,EAAKiB,SAAiB,OAAEC,OAEhD,GAAIG,MAAMhB,IAAUgB,MAAMF,IAASE,MAAMD,GACvC,QAoBJ,SAA0BE,EAAcH,EAAMC,GAC5C,IAAIG,EAAeD,EAEnB,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BrB,EAAcqB,EAAI,EAAGD,GAClBE,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAEzEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoB1B,QAAeC,MAAU,IAGzEkB,GAAgBJ,C,CA7BlBY,CAAiB1B,EAAOc,EAAMC,E","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nimport Notiflix from \"notiflix\";\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delay = parseInt(form.elements[\"delay\"].value);\n  const step = parseInt(form.elements[\"step\"].value);\n  const amount = parseInt(form.elements[\"amount\"].value);\n\n  if (isNaN(delay) || isNaN(step) || isNaN(amount)) {\n    return;\n  }\n\n  generatePromises(delay, step, amount);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction generatePromises(initialDelay, step, amount) {\n  let currentDelay = initialDelay;\n\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    currentDelay += step;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","parseInt","elements","value","step","amount","isNaN","initialDelay","currentDelay","i","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$generatePromises"],"version":3,"file":"03-promises.70865f8a.js.map"}